question,answer
"What testing framework does Dojo provide?","Dojo provides a testing framework for writing tests for smart contracts."
"Why do you need to use sozo to test Dojo contracts?","Dojo uses a custom compiler, so sozo is required for testing contracts."
"How do you run tests using sozo?","From the project directory, execute: sozo test."
"In Dojo Where should unit tests be included?","Unit tests should be included in the same file as the Model/System being developed."
"Where should integration tests be created?","Create a tests directory in the project root and a file for each integration test."
"In Dojo: What is the best practice for writing unit tests?","It is recommended to include unit tests in the same file as the Model/System being written."
"What is the purpose of integration tests?","Integration tests aim to test the functionality of the entire system."
"In Dojo: What should you do to create integration tests for your world?","Create a tests directory in the project root and a file for each integration test you want to write."
"What framework does Dojo provide to write tests for smart contracts?","Dojo provides a testing framework."
"Which tool do we need to use to test contracts since Dojo uses a custom compiler?","sozo"
"In Dojo: How do we run all tests within our project?","From the project directory, run: sozo test."
"What is best practice when including unit tests?","Include unit tests in the same file as the Model/System being written."
"In Dojo: Where can we write integration tests for the world?","Integration tests for the world can be written in a tests directory created in the project root."
"Dojo: How do we create integration tests?","Create a file for each integration test in the tests directory."
"Dojo: What is the recommended test file extension?","Use .ts as the extension for test files."
"In Dojo: How to debug tests?","Use the node --inspect-brk command to debug tests."
"In Dojo: What is a recommended best practise for writing good tests?","Keep tests independent and atomic, meaning that each test should test a single unit of functionality."
"Dojo: What kind of testing framework does Dojo offer?","Dojo offers a testing framework specifically for writing tests for smart contracts."
"Dojo: Why is sozo necessary for testing Dojo contracts?","Since Dojo employs a custom compiler, sozo is essential for testing its contracts."
"Dojo: How are tests executed using sozo?","To run tests, use the command: sozo test, from within the project directory."
"In Dojo, where should unit tests be placed?","Unit tests should be located in the same file as the Model/System that is being developed."
"Dojo: What is the recommended location for writing integration tests?","For integration tests, set up a tests directory at the root of the project and create individual files for each test."
"Dojo: What's the advised approach to unit test writing?","The best practice is to include unit tests within the same file as the Model/System under development."
"What's the objective of conducting integration tests?","Integration tests are designed to assess the entire system's functionality."
"How should one approach creating integration tests for a world in Dojo?","To write integration tests for your world, establish a tests directory in the project's root and generate separate files for each test."
"What testing framework is provided by Dojo for smart contracts?","Dojo supplies a dedicated testing framework."
"Which tool is required for contract testing in Dojo, given its custom compiler?","sozo is the necessary tool for this purpose."
"Dojo: How do you run the project's entire test suite?","Execute the command: sozo test, from within the project's directory."
"Dojo: What's the recommended practice for incorporating unit tests?","It's best to integrate unit tests directly into the file of the Model/System being developed."
"Where should integration tests for a world be composed in Dojo?","Integration tests should be written in a dedicated tests directory located in the project's root."
"What steps are involved in creating integration tests?","For each integration test, create a corresponding file in the tests directory."
"What file extension should be used for test files?","Test files should have the .ts extension."
"Dojo: What method is suggested for debugging tests?","To debug tests, the command node --inspect-brk is recommended."
"What constitutes a best practice for crafting effective tests?","Ensure that tests are independent and atomic, focusing each test on a single functionality aspect."