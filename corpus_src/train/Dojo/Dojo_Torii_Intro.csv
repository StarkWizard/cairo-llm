question,answer
"What are the two parts of Torii?","Torii has two parts: the client and the server. "
"What does the Torii server comprise of?","The Torii server comprises of the rust backend that exposes the graphql and gRPC endpoints. "
"What does the Torii client do?","Torii client API interfaces with the server to provide an easy to use api for various clients such as wasm, unity, and c. "
"How do I use Torii?","To use Torii, run: torii --world <World Address>. This will start a GraphQL API at http://localhost:8080/graphql and a gRPC api at http://localhost:8080. "
"How can I install Torii?","Torii can be installed via dojoup, our dedicated installation package manager. "
"How can I install Torii from the source code?","To install Torii from the source code, run: cargo install --path ./crates/torii --profile local --force. This will install Torii and the required dependencies on your local system. "
"What is dojoup?","Dojoup is the dedicated installation package manager for Torii. "
"What is the purpose of world introspection in Torii?","World introspection in Torii is used to bootstrap directly from an onchain deployment. "
"What is the purpose of the GraphQL API in Torii?","The GraphQL API in Torii provides a fully typed, dynamically generated interface for accessing data from the world state. "
"What is the purpose of the gRPC API in Torii?","The gRPC API in Torii provides a high performance interface for binding clients to the world state. "
"What language is Torii built in?","Torii is built in Rust. "
"What is the primary goal of Torii?","Torii aims to be blazingly fast and exceptionally scalable. "
"What are some of the clients that can interact with Torii?","Clients that can interact with Torii include wasm, unity, and c. "
"What is the default port for the GraphQL API in Torii?","The default port for the GraphQL API in Torii is 8080. "
"What is the default port for the gRPC API in Torii?","The default port for the gRPC API in Torii is 8080. "
"What is the syntax for running Torii?","To run Torii, use the following syntax: torii --world <World Address>. "
"What is the name of the package manager used to install Torii?","Dojoup is the name of the package manager used to install Torii. "
"What command can be used to install Torii from the source code?","To install Torii from the source code, use the following command: cargo install --path ./crates/torii --profile local --force. "
"What is the typical location of the GraphQL API in Torii?","The GraphQL API in Torii is typically located at http://localhost:8080/graphql. "
"What are the two parts of Torii?","Torii has two parts, the client and the server."
"What does the Torii server comprise of?","The Torii server consists of a Rust backend that exposes the GraphQL and gRPC endpoints."
"What does the Torii client do?","The Torii client interfaces with the server to simplify the API for clients in various languages like WASM, Unity, and C."
"How can I use Torii?","Use 'torii --world <World Address>' to leverage world introspection and bootstrap directly from an onchain deployment."
"What APIs does Torii provide?","Torii offers a GraphQL API accessible at 'http://localhost:8080/graphql' and a gRPC API at 'http://localhost:8080'."
"How can I install Torii?","You can install Torii using 'dojoup', a dedicated installation package manager."
"Can I install Torii from the source code?","Yes, you can install Torii from the source code using 'cargo install --path ./crates/torii --profile local --force'."
"What is the purpose of dojoup?","Dojoup is a dedicated installation package manager used to install Torii."
"How can I run Torii from source code?","To run Torii from source code, use 'cargo install --path ./crates/torii --profile local --force' to install it and its dependencies."
"What is the benefit of using Torii?","Torii leverages world introspection to enable direct bootstrapping from an onchain deployment, providing a fully typed and dynamically generated GraphQL interface and a high-performance gRPC API."
"What programming languages are supported by Torii?","Torii supports various programming languages, including WASM, Unity, and C."
"How can I access the Torii GraphQL API?","The Torii GraphQL API can be accessed at 'http://localhost:8080/graphql'."
"How can I access the Torii gRPC API?","The Torii gRPC API can be accessed at 'http://localhost:8080'."
"What is world introspection in the context of Torii?","World introspection in Torii allows Torii to directly bootstrap from an onchain deployment without needing to manually define the data model."
"What is the primary language used in Torii development?","Torii is primarily developed using the Rust programming language."
"What is the main function of the Torii server?","The Torii server exposes the GraphQL and gRPC endpoints, serving as the backbone of the Torii infrastructure."
"What is the primary use case of Torii?","Torii is used for indexing and serving data from dojo worlds, enabling the creation of decentralized applications on the blockchain."
"How can Torii be run locally?","To run Torii locally, you can use the command 'torii --world <World Address>' along with the address of the dojo world you want to index."
"What is the purpose of the --world flag when running Torii?","The '--world <World Address>' flag is used to specify the address of the dojo world that you want Torii to index and provide access to."
"What programming language is Torii built in?","Rust."
"What are the benefits of using Torii?","It's fast, scalable, and provides a GraphQL and gRPC interface."
"What are the two main parts of Torii?","The client and the server."
"What does the Torii server consist of?","A Rust backend exposing GraphQL and gRPC endpoints."
"What does the Torii client do?","It provides an easy-to-use API for various clients, including WASM, Unity, and C."
"How do I use Torii?","Run 'torii --world <World Address>' to bootstrap directly from an on-chain deployment, providing GraphQL and gRPC APIs on localhost."
"Where can I find Torii's binary?","It can be installed via dojoup, a dedicated installation package manager."
"How do I install Torii from source code?","Use 'cargo install --path ./crates/torii --profile local --force'."
"What does Torii leverage for bootstrapping?","World introspection."
"What is dojoup?","Torii's dedicated installation package manager."
"Where can I find Torii's GraphQL API?","It runs at http://localhost:8080/graphql."
"Where can I find Torii's gRPC API?","It runs at http://localhost:8080."
"What is the purpose of Torii's GraphQL interface?","It provides a dynamically generated, fully typed GraphQL interface."
"What is the purpose of Torii's gRPC API?","It provides a high-performance gRPC API for binding clients to the world state."
"What is the recommended approach for installing Torii?","Using dojoup."
"What is the preferred method for installing Torii from source code?","Using 'cargo install'."
"What command do I use to bootstrap Torii directly from an onchain deployment?","torii --world <World Address>"
"Where can I find more information about Torii's usage?","Refer to the Torii documentation."
"What are the primary advantages of using Torii?","Speed, scalability, and the provision of a GraphQL and gRPC interface."
"What is the main purpose of Torii's GraphQL interface?","To provide a dynamically generated, fully typed GraphQL interface."
"What is the primary purpose of Torii's gRPC API?","To provide a high-performance gRPC API for binding clients to the world state."
"What is the recommended approach for installing Torii?","Using dojoup, a dedicated installation package manager."
"What are some of the potential applications of Torii?","Developing games, simulations, and other interactive experiences."
"How does Torii ensure scalability?","It leverages a Rust backend and provides a high-performance gRPC API."
"What are the key benefits of using Torii for game developers?","Speed, scalability, and the ability to easily integrate with various clients."
"Where is Torii's binary located?","You can install it through dojoup, a specialized installation package manager."
"How can Torii be installed from its source?","Execute 'cargo install --path ./crates/torii --profile local --force' for source code installation."
"What does Torii utilize for its initial setup?","Torii uses world introspection for bootstrapping."
"Can you define dojoup?","Dojoup is the exclusive installation package manager for Torii."
"Where is the GraphQL API for Torii accessible?","Access Torii's GraphQL API at http://localhost:8080/graphql."
"Where is Torii's gRPC API located?","Find Torii's gRPC API at http://localhost:8080."
"What function does the GraphQL interface of Torii serve?","Its purpose is to offer a dynamically generated, fully typed GraphQL interface."
"What role does Torii's gRPC API play?","It's designed to provide a high-performance gRPC API for connecting clients with the world state."
"What is the advised method for installing Torii?","Installation is recommended via dojoup."
"What is the suggested procedure for source code installation of Torii?","'cargo install' is the preferred method."
"How is Torii bootstrapped directly from an onchain deployment?","Use the command 'torii --world <World Address>'."
"Where can I learn more about how to use Torii?","Consult the Torii documentation for detailed usage information."
"What are Torii's main advantages?","Torii's key benefits include speed, scalability, and offering both GraphQL and gRPC interfaces."
"What is the primary function of Torii's GraphQL interface?","Its main purpose is to deliver a dynamically generated, fully typed GraphQL interface."
"What is the central purpose of Torii's gRPC API?","It aims to provide a high-performance gRPC API for integrating clients with the world state."
"What is the suggested installation method for Torii?","The recommended way is through dojoup, a dedicated installation package manager."
"What possible uses does Torii have?","Torii can be applied in game development, simulations, and various interactive projects."
"How does Torii maintain scalability?","It achieves scalability through a Rust backend and a high-performance gRPC API."
"What are the principal advantages for game developers using Torii?","For game developers, the main advantages include speed, scalability, and ease of integration with different clients."
"does Torii have a GUI","no it proposes only a APIs and command tools"
"Is the Torii graphical user interface easy to use","Torii is a command line tool, no GUI"
"Is the torii client side using a GUI","no it is not, torii does not propose any user interface at all"
"Does Torii feature a graphical user interface?","Torii exclusively offers APIs and command-line tools, with no GUI."
"Is the user interface of Torii straightforward to navigate?","Torii operates as a command-line tool and does not provide a graphical user interface."
"Does the Torii client side employ a GUI?","No, Torii does not include any form of user interface."
"Is there a GUI available for Torii?","No, Torii only provides APIs and command-line tools without a GUI."
"How user-friendly is the Torii GUI?","There is no GUI for Torii; it is a command-line tool."
"Does the client side of Torii utilize a GUI?","No, the client side of Torii does not use a GUI, as Torii lacks any user interface."