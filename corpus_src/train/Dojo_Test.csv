question,answer
"What testing framework does Dojo provide?","Dojo provides a testing framework for writing tests for smart contracts."
"Why do you need to use sozo to test Dojo contracts?","Dojo uses a custom compiler, so sozo is required for testing contracts."
"How do you run tests using sozo?","From the project directory, execute: sozo test."
"In Dojo Where should unit tests be included?","Unit tests should be included in the same file as the Model/System being developed."
"Where should integration tests be created?","Create a tests directory in the project root and a file for each integration test."
"What is the best practice for writing unit tests?","It is recommended to include unit tests in the same file as the Model/System being written."
"What is the purpose of integration tests?","Integration tests aim to test the functionality of the entire system."
"What should you do to create integration tests for your world?","Create a tests directory in the project root and a file for each integration test you want to write."
"What framework does Dojo provide to write tests for smart contracts?","Dojo provides a testing framework."
"Which tool do we need to use to test contracts since Dojo uses a custom compiler?","sozo"
"How do we run all tests within our project?","From the project directory, run: sozo test."
"What is best practice when including unit tests?","Include unit tests in the same file as the Model/System being written."
"Where can we write integration tests for the world?","Integration tests for the world can be written in a tests directory created in the project root."
"How do we create integration tests?","Create a file for each integration test in the tests directory."
"What is the recommended test file extension?","Use .ts as the extension for test files."
"How to debug tests?","Use the node --inspect-brk command to debug tests."
"What is a recommended best practise for writing good tests?","Keep tests independent and atomic, meaning that each test should test a single unit of functionality."