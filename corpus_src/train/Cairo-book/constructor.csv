question,answer
"What is a constructor","in Cairo constructor is a special function that will automatically run once during contract deployment. It is usually used to initialize the parameters of the contract.
Constructor functions must be marked as #[constructor]attributes.
There can be at most one per contract constructor."
"Give an exemple of a contract with a constructor","
```
    #[starknet::contract]
    mod owner{
        use starknet::ContractAddress;
        use starknet::get_caller_address;

        #[storage]
        struct Storage{
            owner: ContractAddress,
        }

        #[constructor]
        fn constructor(ref self: ContractState) {
            self.owner.write(get_caller_address());
        }
    }
```
"
"Give an example of a contract with a constructor that initializes a balance","
```
    #[starknet::contract]
    mod bank{

        #[storage]
        struct Storage{
            balance: u128,
        }

        #[constructor]
        fn new(ref self: ContractState, initial_balance: u128) {
            self.balance.write(initial_balance);
        }
    }
```
"
"Give an example of a contract with a constructor that sets up an admin address","
```
    #[starknet::contract]
    mod admin_controlled{
        use starknet::ContractAddress;

        #[storage]
        struct Storage{
            admin: ContractAddress,
        }

        #[constructor]
        fn setup_admin(ref self: ContractState, admin_address: ContractAddress) {
            self.admin.write(admin_address);
        }
    } 
``` 
"
"Give an example of a contract with a constructor that initializes multiple parameters","
```
    #[starknet::contract]
    mod multi_param{
        use starknet::ContractAddress;

        #[storage]
        struct Storage{
            owner: ContractAddress,
            threshold: Uint256,
            rate: Uint256,
        }

        #[constructor]
        fn multi_init(ref self: ContractState, owner_address: ContractAddress, init_threshold: Uint256, init_rate: Uint256) {
            self.owner.write(owner_address);
            self.threshold.write(init_threshold);
            self.rate.write(init_rate);
        }
    }
``` 
"
"Give an example of a contract with a constructor that sets a start and end date","
``` 
    #[starknet::contract]
    mod timed_event{


        #[storage]
        struct Storage{
            start_date: u128,
            end_date: u128,
        }

        #[constructor]
        fn set_dates(ref self: ContractState, start: u128, end: u128) {
            self.start_date.write(start);
            self.end_date.write(end);
        }
    }
``` 
"
"Give an example of a contract with a constructor that sets an account's nickname","
```
    #[starknet::contract]
    mod account_nicknames{


        #[storage]
        struct Storage{
            nickname: felt,
        }

        #[constructor]
        fn set_nickname(ref self: ContractState, nickname: felt) {
            self.nickname.write(nickname);
        }
    }
``` 
"