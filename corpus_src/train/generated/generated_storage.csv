"question","answer"
"How are storage variables defined in Starknet contracts?","Storage variables in Starknet contracts are stored in a special struct called Storage."
"Provide a code example of how a storage struct looks like.","#[storage]\nstruct Storage {\n    id: u8,\n    names: LegacyMap::<ContractAddress, felt252>,\n}"
"What is the unique annotation that differentiates a storage struct from other structs?","#[storage]"
"What is the significance of LegacyMap in Starknet?","LegacyMap allows you to store mappings in the storage struct."
"Write a code snippet to represent how the base address 'StorageBaseAddress' of a value in storage is calculated.","sn_keccak(variable_name)"
"What is the specific output size of the keccak256 hash function?","256 bits"
"What does 'sn_keccak' produce?","sn_keccak is defined as the first 250 bits of the Keccak256 hash."
"Which types from the core library can be stored without further action?","Most types from the core library, such as unsigned integers (u8, u128, u256...), felt252, bool, ContractAddress, etc. implement the Store trait and can be stored without further action."
"How would you store a struct you defined in storage?","You would implement the Store trait for your struct."
"Provide an example of a struct with attributes to be stored in Starknet storage.","
```
    #[derive(Copy, Drop, Serde, starknet::Store)]
    struct Person {
        name: felt252,
        address: ContractAddress
    }
```"
"How is the base storage address for structs determined?","The base storage address for structs is
```
    sn_keccak(variable_name)
```"
"Describe how subsequent fields in a struct are stored.","Subsequent fields are stored in addresses contiguous to the first elements at addresses base_address + i."
"What is a mapping in the context of smart contracts?","Mappings are a key-value data structure that allow you to associate a unique key with a corresponding value within a smart contract."
"How do you define a mapping variable in Starknet?","A mapping is a variable of type LegacyMap, where the key and value types are specified within angular brackets <>."
"Where can the LegacyMap type be used in Starknet?","The LegacyMap type can only be used inside the Storage struct."
"Provide an example of a complex mapping similar to the allowances storage variable in the ERC20 Standard.","
```
    #[storage]
    struct Storage {
        allowances: LegacyMap::<(ContractAddress, ContractAddress), u256>
    }
```"
"How is the address of a value in a mapping determined?","The address of the value is determined by
```
    h(...h(h(sn_keccak(variable_name),k_1),k_2),...,k_n)
```
where ℎ is the Pedersen hash and the final value is taken mod (2^251) − 256."
"How are the keys of a mapping represented when they are structs?","Each element of the struct constitutes a key."
"What should a struct implement if it's being used as a key in a mapping?","The struct should implement the Hash trait."
"Provide a code snippet to represent how the address of a key, which is a struct, in a mapping is calculated.","h(h(sn_keccak(variable_name),k_1),k_2) - where k_1 and k_2 are the values of the two fields of the struct."
"How do you compute the address for a nested mapping like LegacyMap((ContractAddress, ContractAddress), u8)?","The address is computed as h(h(sn_keccak(variable_name),k_1),k_2)."
"How do you read a value from a storage variable that stores a mapping?","You call the read function on the storage variable, passing in the key address as a parameter."
"Provide a code snippet for reading a value from a storage variable names.","let name = self.names.read(address);"
"How do you access a value from a storage variable that does not store a mapping?","The value is accessed without passing any parameters to the read method."
"How do you write a value to a storage variable that stores a mapping?","You call the write function on the storage variable, passing in the key and values as arguments."
"Provide a code snippet for writing a value to a storage variable names.","self.names.write(user, name);"
"what do storage variables enable?","Storage variables allow you to store data that will be stored in the contract's storage on the blockchain."
"Are the data in storage variables temporary?","No, these data are persistent and can be accessed and modified anytime once the contract is deployed."
"In Starknet contracts, what is used to store storage variables?","Storage variables are stored in a special struct called Storage."
"Is the storage struct unique in any way compared to other structs?","Yes, the storage struct must be annotated with #[storage]."
"What allows you to store mappings in Starknet?","The LegacyMap type allows you to store mappings in Starknet."
"What is the function of sn_keccak?","sn_keccak is defined as the first 250 bits of the Keccak256 hash."
"What does sn_keccak(variable_name) represent?","It represents the base address StorageBaseAddress of a value in storage."
"Can you store arrays in Starknet storage?","No, it's impossible to store arrays in storage."
"What data structure is similar to hash tables in smart contracts?","Mappings are similar to hash tables in smart contracts."
"Where can you learn more about the contract storage layout in Starknet?","You can learn more about it in the Starknet Documentation."
"What function do you call to read a value from a storage variable?","You call the 'read' function."
"How do you call the 'read' function on the 'names' storage variable?","let name = self.names.read(address);"
"When the storage variable doesn't store a mapping, how is its value accessed?","Its value is accessed without passing any parameters to the read method."
"How do you write a value to the 'names' storage variable?","self.names.write(user, name);"
"Where are the data of storage variables saved?","The data of storage variables are stored in the contract's storage on the blockchain."
"How do storage variables differ from regular variables?","Storage variables are persistent and can be accessed and modified anytime once the contract is deployed."
"What type is used to represent a mapping in Starknet?","LegacyMap is used to represent a mapping in Starknet."
"What does the LegacyMap type allow you to store?","LegacyMap allows you to store mappings using unique keys associated with corresponding values."
"How are most core library types stored in Starknet?","Most types from the core library implement the Store trait and can be stored without any additional steps."
"To store a user-defined struct in Starknet storage, what needs to be done?","You need to implement the Store trait for your struct."
"How do you tell the compiler how to store your struct in Starknet?","By adding a #[derive(starknet::Store)] attribute on top of the struct definition."
"What are mappings used for in smart contracts?","Mappings are used to store data within a smart contract, essentially acting as hash tables to associate unique keys with corresponding values."
"Can LegacyMap type be used in user-defined structs?","No, the LegacyMap type can only be used inside the Storage struct."
"What is a popular allowances storage variable in the ERC20 Standard similar to?","It's similar to a mapping which maps the owner and spender to the allowance using tuples."
"How do you represent a key that's a struct in a mapping's address?","Each element of the struct constitutes a key."
"How are nested mappings like LegacyMap((ContractAddress, ContractAddress), u8) addressed?","The address is computed as
```
    h(h(sn_keccak(variable_name),k_1),k_2)
```
"
"What function do you use to write a value to a storage variable in Starknet?","You use the 'write' function."
"How do you call the write function on the names storage variable?","self.names.write(user, name);"
"Are storage variables in Starknet volatile?","No, storage variables are persistent."
"What does the #[derive(starknet::Store)] attribute do?","It tells the compiler how to store a user-defined struct in Starknet storage."
"How do you read from a storage variable that doesn't have a mapping?","Its value is accessed without passing any parameters to the read method."
"How are subsequent fields in a struct stored in Starknet storage?","Subsequent fields are stored in addresses contiguous to the first elements."
"What do you have to add to a struct to store it in Starknet storage?","You need to add the #[derive(starknet::Store)] attribute on top of the struct definition."
"What is the purpose of the LegacyMap type?","The LegacyMap type allows you to store key-value mappings in the Storage struct."
"How do you associate a unique key with a value in a Starknet smart contract?","You can use mappings, which are essentially hash tables that allow this association."
"Can you store arrays in Starknet contract storage?","No, it's impossible to store arrays in storage."
"How do you store arrays in Starknet contract storage?","It's impossible to store arrays in storage."
"How do you read a value from the 'names' storage variable?","You call the read function on the 'names' storage variable, passing in the key address as a parameter:
```
    let name = self.names.read(address);
```
"
"How are the addresses for values in mappings determined?","The addresses are determined using a series of hashes with the Pedersen hash function, based on the variable name and keys."
"How is the address of a nested mapping calculated?","For a nested mapping like LegacyMap((ContractAddress, ContractAddress), u8), the address is computed as
```
    h(h(sn_keccak(variable_name),k_1),k_2)
```"
"What should you do if you want to use a struct as a key in a mapping?","The struct should implement the Hash trait, which can be derived with the
```#[derive(Hash)]```
attribute."
